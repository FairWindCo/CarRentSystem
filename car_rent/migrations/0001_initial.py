# Generated by Django 3.2.6 on 2022-01-31 18:29

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('car_management', '0001_initial'),
        ('balance', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddDepositCarRentPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Сумма')),
            ],
            options={
                'verbose_name': 'Добавить депозитные средства',
                'verbose_name_plural': 'Добавить депозитные средства',
                'abstract': False,
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarInRentPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=datetime.datetime(2022, 1, 31, 18, 29, 51, 886615, tzinfo=utc), verbose_name='Дата и время начала аренды')),
                ('end_time', models.DateTimeField(default=datetime.datetime(2022, 2, 3, 18, 29, 51, 886615, tzinfo=utc), verbose_name='Дата и время завершения аренды')),
                ('amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Сумма')),
                ('deposit', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Залог')),
            ],
            options={
                'verbose_name': 'Сдача машины в аренду',
                'verbose_name_plural': 'Сдача машины в аренду',
                'abstract': False,
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PenaltyDepositCarRentPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Сумма')),
            ],
            options={
                'verbose_name': 'Штраф на арендованую машину',
                'verbose_name_plural': 'Штраф на арендованую машину',
                'abstract': False,
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReturnCarRentAdmin_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Возврат машины',
                'verbose_name_plural': 'Возврат машины',
                'abstract': False,
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReturnCarRentPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Срочный возврат машины из аренды',
                'verbose_name_plural': 'Срочный возврат машины из аренды',
                'abstract': False,
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RentPageModelAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TaxiOperator',
            fields=[
                ('counterpart_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='car_management.counterpart')),
                ('cash_profit', models.FloatField(default=17, verbose_name='Коэффициент прибили с поезди оператора (нал)')),
                ('profit', models.FloatField(default=17, verbose_name='Коэффициент прибили с поезди оператора (без нал)')),
                ('bank_interest', models.FloatField(default=2.5, verbose_name='Комиссия за перевод (без нал)')),
                ('cash_box', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='balance.cashbox')),
            ],
            options={
                'verbose_name': 'Оператор такси',
                'verbose_name_plural': 'Оператор такси',
            },
            bases=('car_management.counterpart',),
        ),
        migrations.CreateModel(
            name='CarsInOperator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal', models.CharField(default='', max_length=7, verbose_name='Позывной')),
                ('car_uid', models.CharField(blank=True, max_length=255, null=True, verbose_name='Идентификатор машины')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cars_in_taxi', to='car_management.car', verbose_name='Машина')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxi_park', to='car_rent.taxioperator', verbose_name='Таксопарк')),
            ],
            options={
                'verbose_name': 'Машины в таксопарках',
                'verbose_name_plural': 'Машины в таксопарках',
                'unique_together': {('operator', 'car_uid'), ('operator', 'signal')},
            },
        ),
        migrations.CreateModel(
            name='CarSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_rent', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Аренда завершена')),
                ('deposit', models.FloatField(default=0.0, verbose_name='Требуемый залог')),
                ('paid_deposit', models.FloatField(default=0.0, verbose_name='Оплаченный залог')),
                ('amount', models.FloatField(default=0.0, verbose_name='Оплаченная сумма за аренду')),
                ('work_in_taxi', models.BooleanField(default=False, verbose_name='Работает в нашем такси')),
                ('can_break_rent', models.BooleanField(default=True, verbose_name='Разрешен досочный возврат')),
                ('trip_many_paid', models.BooleanField(default=False, verbose_name='Проведение оплат по поездкам')),
                ('auto_renew', models.BooleanField(default=False, verbose_name='Автоматически обновлять план аренды')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car_management.car', verbose_name='Машина')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='car_management.driver', verbose_name='Арендатор')),
                ('taxi_operators', models.ManyToManyField(to='car_rent.CarsInOperator', verbose_name='операторы такси')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_terms', to='car_management.rentterms', verbose_name='условия')),
            ],
            options={
                'verbose_name': 'Аренда авто',
                'verbose_name_plural': 'Расписание аренды авто',
            },
        ),
        migrations.CreateModel(
            name='ReturnRentPageModelAdmin',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('car_rent.carschedule',),
        ),
        migrations.CreateModel(
            name='BrandingAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat_date', models.DateField(default=datetime.datetime(2022, 1, 31, 18, 29, 51, 855246, tzinfo=utc), verbose_name='Дата')),
                ('amount', models.FloatField(default=0, verbose_name='Доход от брендирования')),
                ('operate', models.FloatField(default=14, verbose_name='Операционные затраты')),
                ('investor_amount', models.FloatField(default=14, verbose_name='Прибыль инвестора')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car_management.car')),
            ],
            options={
                'verbose_name': 'Брендирование',
                'verbose_name_plural': 'Брендирование',
                'unique_together': {('car', 'stat_date')},
            },
        ),
    ]
