# Generated by Django 3.2.6 on 2022-01-30 17:07

import audit_log.models.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('balance', '0006_cashbox'),
        ('car_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WialonTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(default=datetime.datetime(2022, 1, 30, 17, 7, 38, 751343, tzinfo=utc), verbose_name='Дата начала поездки')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения поездки')),
                ('mileage', models.FloatField(default=0, verbose_name='Пробег по трекеру')),
                ('fuel', models.PositiveIntegerField(default=0, verbose_name='Раход по трекеру')),
                ('avg_speed', models.PositiveIntegerField(default=0, verbose_name='Средняя скорость')),
                ('max_speed', models.PositiveIntegerField(default=0, verbose_name='Максимальная скорость')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car_management.car')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='car_management.driver', verbose_name='Водитель, если известно')),
            ],
            options={
                'verbose_name': 'GPS поездки',
                'unique_together': {('car', 'start')},
            },
        ),
        migrations.CreateModel(
            name='WialonDayStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat_date', models.DateField(default=datetime.datetime(2022, 1, 30, 17, 7, 38, 752339, tzinfo=utc), verbose_name='Дата')),
                ('stat_interval', models.PositiveIntegerField(default=0, verbose_name='Интервал')),
                ('mileage', models.FloatField(default=0, verbose_name='Пробег по трекеру')),
                ('stop_count', models.PositiveIntegerField(default=0, verbose_name='Остановок')),
                ('park_count', models.PositiveIntegerField(default=0, verbose_name='Парковок')),
                ('drive_time', models.PositiveIntegerField(default=0, verbose_name='Время поездки')),
                ('park_time', models.PositiveIntegerField(default=0, verbose_name='Время стоянки')),
                ('avg_speed', models.PositiveIntegerField(default=0, verbose_name='Средняя скорость')),
                ('max_speed', models.PositiveIntegerField(default=0, verbose_name='Максимальная скорость')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car_management.car')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='car_management.driver', verbose_name='Водитель, если известно')),
            ],
            options={
                'verbose_name': 'GPS поездки',
                'unique_together': {('car', 'stat_date', 'stat_interval')},
            },
        ),
        migrations.CreateModel(
            name='TripStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat_date', models.DateField(default=datetime.datetime(2022, 1, 30, 17, 7, 38, 801248, tzinfo=utc), verbose_name='Дата')),
                ('trip_count', models.PositiveIntegerField(default=0, verbose_name='Кол-во поездок')),
                ('mileage', models.FloatField(default=0, verbose_name='Пробег за поездки')),
                ('cash', models.FloatField(default=0, verbose_name='Сумма наличнных')),
                ('amount', models.FloatField(default=0, verbose_name='Сумма оплаты')),
                ('fuel', models.FloatField(default=0, verbose_name='Затраты на топливо')),
                ('payer_amount', models.FloatField(default=0, verbose_name='Прибыль сервиса')),
                ('bank_amount', models.FloatField(default=0, verbose_name='Банк процент')),
                ('driver_amount', models.FloatField(default=0, verbose_name='Зарплата водителя')),
                ('operating_services', models.FloatField(default=0, verbose_name='Операционные затраты')),
                ('investor_amount', models.FloatField(default=0, verbose_name='Прибыль инвестора')),
                ('car_in_rent', models.BooleanField(default=False, verbose_name='Машина в аренде')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car_management.car')),
            ],
            options={
                'verbose_name': 'Суточные данные по поездкам в такси',
                'unique_together': {('car', 'stat_date', 'car_in_rent')},
                'index_together': {('car', 'stat_date')},
            },
        ),
        migrations.CreateModel(
            name='TaxiTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_created=True, verbose_name='Дата начала поездки')),
                ('mileage', models.FloatField(verbose_name='Пробег по трекеру')),
                ('fuel', models.FloatField(verbose_name='Затраты на топливо')),
                ('amount', models.FloatField(verbose_name='Сумма оплаты')),
                ('many_in_cash', models.FloatField(default=0, verbose_name='Оплата наличными')),
                ('payer_amount', models.FloatField(default=0, verbose_name='Прибыль сервиса')),
                ('driver_amount', models.FloatField(default=0, verbose_name='Зарплата водителя')),
                ('bank_amount', models.FloatField(default=0, verbose_name='Комиссия банка')),
                ('operating_services', models.FloatField(default=0, verbose_name='Операционные услуги')),
                ('investor_rent', models.FloatField(default=0, verbose_name='Прибыль инвестора')),
                ('is_rent', models.BooleanField(default=False, verbose_name='Упущенная прибыль')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car_management.car')),
                ('created_by', audit_log.models.fields.CreatingUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_taxi_trips', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='car_management.driver', verbose_name='Водитель, если известно')),
                ('payer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='balance.account', verbose_name='Плательщик/От кого приняли средства')),
                ('transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='balance.transaction')),
            ],
            options={
                'unique_together': {('car', 'timestamp')},
            },
        ),
    ]
